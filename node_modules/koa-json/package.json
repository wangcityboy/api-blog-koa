{
  "name": "koa-json",
  "version": "1.1.3",
  "repository": {
    "type": "git",
    "url": "git://github.com/koajs/json"
  },
  "description": "pretty (non-compressed) json response middleware",
  "keywords": [
    "koa",
    "json"
  ],
  "dependencies": {
    "koa-is-json": "1",
    "streaming-json-stringify": "3"
  },
  "devDependencies": {
    "istanbul": "0",
    "mocha": "2",
    "koa": "1",
    "supertest": "1"
  },
  "license": "MIT",
  "scripts": {
    "test": "NODE_ENV=test mocha --reporter spec",
    "test-cov": "NODE_ENV=test istanbul cover ./node_modules/.bin/_mocha",
    "test-travis": "NODE_ENV=test istanbul cover ./node_modules/.bin/_mocha --report lcovonly"
  },
  "files": [
    "index.js"
  ],
  "readme": "\n# koa-json\n\n  JSON pretty-printed response middleware.\n  Also converts node object streams to binary.\n\n## Installation\n\n```\n$ npm install koa-json\n```\n\n## Options\n\n - `pretty` default to pretty response [true]\n - `param` optional query-string param for pretty responses [none]\n - `spaces` JSON spaces [2]\n\n## Example\n\n  Always pretty by default:\n\n```js\nvar json = require('koa-json');\nvar app = koa();\n\napp.use(json());\n\napp.use(function *(next){\n  this.body = { foo: 'bar' };\n});\n```\n\n  yields:\n\n```js\n$ GET /\n\n{\n  \"foo\": \"bar\"\n}\n```\n\n  Default to being disabled (useful in production), but\n  togglable via the query-string parameter:\n\n```js\nvar app = koa();\n\napp.use(json({ pretty: false, param: 'pretty' }));\n\napp.use(function *(next){\n  this.body = { foo: 'bar' };\n});\n```\n\n yields:\n\n```js\n$ GET /\n\n{\"foo\":\"bar\"}\n```\n\n```js\n$ GET /?pretty\n\n{\n  \"foo\": \"bar\"\n}\n```\n\n# License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/koajs/json/issues"
  },
  "_id": "koa-json@1.1.3",
  "dist": {
    "shasum": "41d38ffbb1953677e69e2d0ca72e2ce9f34db1ae"
  },
  "_from": "koa-json@*",
  "_resolved": "https://registry.npmjs.org/koa-json/-/koa-json-1.1.3.tgz"
}
