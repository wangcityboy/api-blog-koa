{
  "name": "toposort-class",
  "version": "1.0.1",
  "description": "Topological sort of directed acyclic graphs (like dependecy lists)",
  "main": "./index.js",
  "devDependencies": {
    "babel-eslint": "^4.0.5",
    "eslint": "^1.0.0",
    "grunt": "^0.4.5",
    "grunt-babel": "^5.0.1",
    "grunt-banner": "^0.4.0",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-uglify": "^0.9.1",
    "matcha": "^0.6.0",
    "mocha": "^2.2.5"
  },
  "scripts": {
    "test": "mocha -b test",
    "eslint": "eslint src/toposort.js test/spec.js Gruntfile.js",
    "benchmark": "matcha benchmark/general.js",
    "benchmark-save": "matcha -R csv benchmark/general.js > benchmark/results.csv"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gustavohenke/toposort.git"
  },
  "keywords": [
    "topological",
    "sort",
    "sorting",
    "graphs",
    "graph",
    "dependency",
    "list",
    "dependencies",
    "acyclic",
    "browser"
  ],
  "author": "",
  "license": "MIT",
  "readmeFilename": "README.md",
  "readme": "# Toposort\n[![Build Status](http://img.shields.io/travis/gustavohenke/toposort.svg?branch=master&style=flat)](https://travis-ci.org/gustavohenke/toposort)\n[![Dependency Status](http://img.shields.io/gemnasium/gustavohenke/toposort.png?style=flat)](https://gemnasium.com/gustavohenke/toposort)\n\n__Sorting directed acyclic graphs, for Node.js, io.js and the browser__\n_This was originally done by Marcel Klehr. [Why not checkout his original repo?](https://github.com/marcelklehr/toposort)_\n\n## Installation\nThere are a few ways for installing Toposort. Here are them:\n\n* Via NPM: `npm install toposort-class`\n* Via Bower: `bower install toposort`\n* Via Git: `git clone git://github.com/gustavohenke/toposort.git`\n* [Direct download](https://raw.githubusercontent.com/gustavohenke/toposort/master/build/toposort.js) ([Minified](https://raw.githubusercontent.com/gustavohenke/toposort/master/build/toposort.min.js)) for use in the browser\n\n## Example\nLet's say you have the following dependency graph:\n\n* Plugin depends on Backbone and jQuery UI Button;\n* Backbone depends on jQuery and Underscore;\n* jQuery UI Button depends on jQuery UI Core and jQuery UI Widget;\n* jQuery UI Widget and jQuery UI Core depend on jQuery;\n* jQuery and Underscore don't depend on anyone.\n\nNow, how would you sort this in a way that each asset will be correctly placed? You'll probably need the following sorting:\n\n* `jQuery`, `jQuery UI Core`, `jQuery UI Widget`, `jQuery UI Button`, `Underscore`, `Backbone`, `Plugin`\n\nYou can achieve it with the following code, using `toposort-class`:\n```javascript\nvar Toposort = require('toposort-class'),\n\tt = new Toposort();\n\nt.add(\"jquery-ui-core\", \"jquery\")\n .add(\"jquery-ui-widget\", \"jquery\")\n .add(\"jquery-ui-button\", [\"jquery-ui-core\", \"jquery-ui-widget\"])\n .add(\"plugin\", [\"backbone\", \"jquery-ui-button\"])\n .add(\"backbone\", [\"underscore\", \"jquery\"]);\n\nconsole.log(t.sort().reverse());\n\n/* Will output:\n * ['jquery', 'jquery-ui-core', 'jquery-ui-widget', 'jquery-ui-button', 'underscore', 'backbone', 'plugin']\n *\n * And you're done.\n */\n```\n\n## Usage\nCommonJS (Node.js and io.js):\n```javascript\nvar Toposort = require('toposort-class'),\n\tt = new Toposort();\n```\n\nBrowser with AMD:\n```javascript\ndefine(\"myModule\", [\"Toposort\"], function(Toposort) {\n    var t = new Toposort();\n});\n```\n\nBrowser without AMD:\n```javascript\nvar t = new window.Toposort();\n```\n\nor whatever global object there is instead of `window`.\n\n## API\n\n#### `.add(item, deps)`\n* _{String}_ `item` - The name of the dependent item that is being added\n* _{Array|String}_ `deps` - A dependency or list of dependencies of `item`\n\n__Returns:__ _{Toposort}_ The Toposort instance, for chaining.\n\n#### `.sort()`\n__Returns:__ _{Array}_ The list of dependencies topologically sorted.\n\nThis method will check for cyclic dependencies, like \"A is dependent of A\".\n\n#### `.clear()`\n__Returns:__ _{Toposort}_ The Toposort instance, for chaining.\n\nClears all edges, effectively resetting the instance.\n\n#### `.Toposort`\n\nReference to the Toposort constructor.\n\n## Legal\nMIT License\n",
  "bugs": {
    "url": "https://github.com/gustavohenke/toposort/issues"
  },
  "_id": "toposort-class@1.0.1",
  "dist": {
    "shasum": "6cda21010e7b1d94a27521849447282b9a94680f"
  },
  "_from": "toposort-class@^1.0.1",
  "_resolved": "https://registry.npmjs.org/toposort-class/-/toposort-class-1.0.1.tgz"
}
