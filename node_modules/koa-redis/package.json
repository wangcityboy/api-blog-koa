{
  "name": "koa-redis",
  "description": "koa session with redis using koa-generic-session",
  "repository": {
    "type": "git",
    "url": "git://github.com/koajs/koa-redis"
  },
  "bugs": {
    "url": "https://github.com/koajs/koa-redis/issues"
  },
  "homepage": "https://github.com/koajs/koa-redis",
  "version": "2.1.2",
  "main": "index.js",
  "scripts": {
    "test": "istanbul cover node_modules/mocha/bin/_mocha -- --require co-mocha \"test/**/*.test.js\"",
    "test-only": "mocha --require co-mocha \"test/**/*.test.js\"",
    "autod": "autod -w --prefix=~"
  },
  "keywords": [
    "koa",
    "middleware",
    "session",
    "redis"
  ],
  "author": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com"
  },
  "dependencies": {
    "co-redis": "~2.1.0",
    "debug": "~2.2.0",
    "redis": "~2.6.0-2",
    "hiredis": "~0.5.0"
  },
  "devDependencies": {
    "autod": "2.7.0",
    "co-mocha": "~1.1.2",
    "connect": "~3.4.0",
    "connect-redis": "~3.1.0",
    "istanbul": "~0.4.1",
    "koa": "~1.2.0",
    "koa-generic-session": "~1.11.3",
    "mocha": "*",
    "should": "~10.0.0"
  },
  "optionalDependencies": {
    "hiredis": "~0.5.0"
  },
  "engines": {
    "node": ">= 4"
  },
  "license": "MIT",
  "readme": "koa-redis\n=========\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Coveralls][coveralls-image]][coveralls-url]\n[![David deps][david-image]][david-url]\n[![David devDeps][david-dev-image]][david-dev-url]\n[![node version][node-image]][node-url]\n[![npm download][download-image]][download-url]\n[![license][license-image]][license-url]\n\n[npm-image]: https://img.shields.io/npm/v/koa-redis.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/koa-redis\n[travis-image]: https://img.shields.io/travis/koajs/koa-redis.svg?style=flat-square\n[travis-url]: https://travis-ci.org/koajs/koa-redis\n[coveralls-image]: https://img.shields.io/coveralls/koajs/koa-redis.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/koajs/koa-redis?branch=master\n[david-image]: https://img.shields.io/david/koajs/koa-redis.svg?style=flat-square&label=deps\n[david-url]: https://david-dm.org/koajs/koa-redis\n[david-dev-image]: https://img.shields.io/david/dev/koajs/koa-redis.svg?style=flat-square&label=devDeps\n[david-dev-url]: https://david-dm.org/koajs/koa-redis#info=devDependencies\n[david-opt-image]: https://img.shields.io/david/optional/koajs/koa-redis.svg?style=flat-square&label=optDeps\n[david-opt-url]: https://david-dm.org/koajs/koa-redis#info=devDependencies\n[node-image]: https://img.shields.io/node/v/koa-redis.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[download-image]: https://img.shields.io/npm/dm/koa-redis.svg?style=flat-square\n[download-url]: https://npmjs.org/package/koa-redis\n[gittip-image]: https://img.shields.io/gittip/dead-horse.svg?style=flat-square\n[gittip-url]: https://www.gittip.com/dead-horse/\n[license-image]: https://img.shields.io/npm/l/koa-redis.svg?style=flat-square\n[license-url]: https://github.com/koajs/koa-redis/blob/master/LICENSE\n\nRedis storage for koa session middleware/cache.\n\n[![NPM](https://nodei.co/npm/koa-redis.svg?downloads=true)](https://nodei.co/npm/koa-redis/)\n\n## Usage\n\n`koa-redis` works with [koa-generic-session](https://github.com/koajs/generic-session) (a generic session middleware for koa).\n\n### Example\n\n```js\nvar session = require('koa-generic-session');\nvar redisStore = require('koa-redis');\nvar koa = require('koa');\n\nvar app = koa();\napp.keys = ['keys', 'keykeys'];\napp.use(session({\n  store: redisStore({\n    // Options specified here\n  })\n}));\n\napp.use(function *() {\n  switch (this.path) {\n  case '/get':\n    get.call(this);\n    break;\n  case '/remove':\n    remove.call(this);\n    break;\n  case '/regenerate':\n    yield regenerate.call(this);\n    break;\n  }\n});\n\nfunction get() {\n  var session = this.session;\n  session.count = session.count || 0;\n  session.count++;\n  this.body = session.count;\n}\n\nfunction remove() {\n  this.session = null;\n  this.body = 0;\n}\n\nfunction *regenerate() {\n  get.call(this);\n  yield this.regenerateSession();\n  get.call(this);\n}\n\napp.listen(8080);\n```\nFor more examples, please see the [examples folder of `koa-generic-session`](https://github.com/koajs/generic-session/tree/master/example).\n\n### Options\n\n - *all [`node_redis`](https://www.npmjs.com/package/redis#options-is-an-object-with-the-following-possible-properties) options* - Useful things include `url`, `host`, `port`, and `path` to the server. Defaults to `127.0.0.1:6379`\n - `db` (number) - will run `client.select(db)` after connection\n - `client` (object) - supply your own client, all other options are ignored unless `duplicate` is also supplied\n - `duplicate` (boolean) - When true, it will run `client.duplicate(options)` on the supplied `client` and use all other options supplied. This is useful if you want to select a different DB for sessions but also want to base from the same client object.\n - **DEPRECATED:** old options - `pass` and `socket` have been replaced by `auth_pass` and `path`, but they should be backwards compatible (still work).\n\n### Events\nSee the [`node_redis` docs](https://www.npmjs.com/package/redis#connection-events) for more info.\n - `ready`\n - `connect`\n - `reconnecting`\n - `error`\n - `end`\n - `warning`\n\n### API\nThese are some the funcitons that `koa-generic-session` uses that you can use manually. You will need to inintialize differently than the example above:\n```js\nvar session = require('koa-generic-session');\nvar redisStore = require('koa-redis')({\n  // Options specified here\n});\nvar app = require('koa')();\n\napp.keys = ['keys', 'keykeys'];\napp.use(session({\n  store: redisStore\n}));\n```\n\n#### module([options])\nInitialize the Redis connection with the optionally provided options (see above). *The variable `session` below references this*.\n\n#### session.get(sid)\nGenerator that gets a session by ID. Returns parsed JSON is exists, `null` if it does not exist, and nothing upon error.\n\n#### session.set(sid, sess, ttl)\nGenerator that sets a JSON session by ID with an optional time-to-live (ttl) in milliseconds. Yields `node_redis`'s `client.set()` or `client.setex()`.\n\n#### session.destroy(sid)\nGenerator that destroys a session (removes it from Redis) by ID. Tields `node_redis`'s `client.del()`.\n\n#### session.quit()\nGenerator that stops a Redis session after everything in the queue has completed. Yields `node_redis`'s `client.quit()`.\n\n#### session.end()\nAlias to `session.quit()`. It is not safe to use the real end function, as it cuts off the queue.\n\n#### session.connected\nBoolean giving the connection status updated using `client.connected` after any of the events above is fired.\n\n#### session.\\_redisClient\nDirect access to the `node_redis` client object.\n\n#### session.client\nDirect access to the `co-redis` wrapper around the `node_redis` client.\n\n## Benchmark\n\n|Server|Transaction rate|Response time|\n|------|----------------|-------------|\n|connect without session|**6763.56 trans/sec**|**0.01 secs**|\n|koa without session|**5684.75 trans/sec**|**0.01 secs**|\n|connect with session|**2759.70 trans/sec**|**0.02 secs**|\n|koa with session|**2355.38 trans/sec**|**0.02 secs**|\n\nDetailed benchmark report [here](https://github.com/koajs/koa-redis/tree/master/benchmark)\n\n## Testing\n1. Start a Redis server on `localhost:6379`. You can use [`redis-windows`](https://github.com/ServiceStack/redis-windows) if you are on Windows or just want a quick VM-based server.\n2. Clone the repository and run `npm i` in it (Windows should work fine).\n3. If you want to see debug output, turn on the prompt's `DEBUG` flag.\n4. Run `npm test` to run the tests and generate coverage. To run the tests without generating coverage, run `npm run-script test-only`.\n\n## Authors\nSee the [contributing tab](https://github.com/koajs/koa-redis/graphs/contributors)\n\n## Licences\n(The MIT License)\n\nCopyright (c) 2015 dead-horse and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "koa-redis@2.1.2",
  "_from": "koa-redis@*"
}
