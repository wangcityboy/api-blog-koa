{
  "name": "koa-router",
  "description": "Router middleware for koa. Provides RESTful resource routing.",
  "repository": {
    "type": "git",
    "url": "https://github.com/alexmingoia/koa-router.git"
  },
  "main": "lib/router.js",
  "files": [
    "lib"
  ],
  "author": {
    "name": "Alex Mingoia",
    "email": "talk@alexmingoia.com"
  },
  "version": "5.4.0",
  "keywords": [
    "koa",
    "middleware",
    "router",
    "route"
  ],
  "dependencies": {
    "debug": "^2.2.0",
    "http-errors": "^1.3.1",
    "methods": "^1.0.1",
    "path-to-regexp": "^1.1.1"
  },
  "devDependencies": {
    "gulp": "^3.8.11",
    "gulp-mocha": "^2.0.0",
    "jsdoc-to-markdown": "^1.1.1",
    "expect.js": "^0.3.1",
    "koa": "^0.20.0",
    "mocha": "^2.0.1",
    "should": "^6.0.3",
    "supertest": "^1.0.1"
  },
  "scripts": {
    "test": "[ \"${TRAVIS_NODE_VERSION}\" = \"0.12\" ] && NODE_ENV=test node --harmony-generators node_modules/gulp/bin/gulp.js test || NODE_ENV=test node node_modules/gulp/bin/gulp.js test",
    "docs": "NODE_ENV=test node node_modules/gulp/bin/gulp.js docs"
  },
  "engines": {
    "node": "> 0.12"
  },
  "license": "MIT",
  "readme": "# koa-router\n\n[![NPM version](http://img.shields.io/npm/v/koa-router.svg?style=flat)](https://npmjs.org/package/koa-router) [![NPM Downloads](https://img.shields.io/npm/dm/koa-router.svg?style=flat)](https://npmjs.org/package/koa-router) [![Node.js Version](https://img.shields.io/node/v/koa-router.svg?style=flat)](http://nodejs.org/download/) [![Build Status](http://img.shields.io/travis/alexmingoia/koa-router.svg?style=flat)](http://travis-ci.org/alexmingoia/koa-router) [![Tips](https://img.shields.io/gratipay/alexmingoia.svg?style=flat)](https://www.gratipay.com/alexmingoia/) [![Gitter Chat](https://img.shields.io/badge/gitter-join%20chat-1dce73.svg?style=flat)](https://gitter.im/alexmingoia/koa-router/)\n\n> Router middleware for [koa](https://github.com/koajs/koa)\n\n* Express-style routing using `app.get`, `app.put`, `app.post`, etc.\n* Named URL parameters.\n* Named routes with URL generation.\n* Responds to `OPTIONS` requests with allowed methods.\n* Support for `405 Method Not Allowed` and `501 Not Implemented`.\n* Multiple route middleware.\n* Multiple routers.\n* Nestable routers.\n* ES7 async/await support (koa-router 7.x).\n\n## koa 2.x\n\nSee [koa-router 7.x](https://github.com/alexmingoia/koa-router/tree/master/)\nfor koa 2.x and async/await support.\n\n## Installation\n\nInstall using [npm](https://www.npmjs.org/):\n\n```sh\nnpm install koa-router\n```\n\n## API Reference\n\n* [koa-router](#module_koa-router)\n  * [Router](#exp_module_koa-router--Router) ⏏\n    * [new Router([opts])](#new_module_koa-router--Router_new)\n    * _instance_\n      * [.get|put|post|patch|delete](#module_koa-router--Router+get|put|post|patch|delete) ⇒ <code>Router</code>\n      * [.param(param, middleware)](#module_koa-router--Router+param) ⇒ <code>Router</code>\n      * [.use([path], middleware, [...])](#module_koa-router--Router+use) ⇒ <code>Router</code>\n      * [.routes](#module_koa-router--Router+routes) ⇒ <code>function</code>\n      * [.allowedMethods([options])](#module_koa-router--Router+allowedMethods) ⇒ <code>function</code>\n      * [.redirect(source, destination, code)](#module_koa-router--Router+redirect) ⇒ <code>Router</code>\n      * [.route(name)](#module_koa-router--Router+route) ⇒ <code>Layer</code> &#124; <code>false</code>\n      * [.url(name, params)](#module_koa-router--Router+url) ⇒ <code>String</code> &#124; <code>Error</code>\n    * _static_\n      * [.url(path, params)](#module_koa-router--Router.url) ⇒ <code>String</code>\n\n<a name=\"exp_module_koa-router--Router\"></a>\n### Router ⏏\n**Kind**: Exported class\n<a name=\"new_module_koa-router--Router_new\"></a>\n#### new Router([opts])\nCreate a new router.\n\n\n| Param | Type | Description |\n| --- | --- | --- |\n| [opts] | <code>Object</code> |  |\n| [opts.prefix] | <code>String</code> | prefix router paths |\n\n**Example**\nBasic usage:\n\n```javascript\nvar app = require('koa')();\nvar router = require('koa-router')();\n\nrouter.get('/', function *(next) {...});\n\napp\n  .use(router.routes())\n  .use(router.allowedMethods());\n```\n<a name=\"module_koa-router--Router+get|put|post|patch|delete\"></a>\n#### router.get|put|post|patch|delete ⇒ <code>Router</code>\nCreate `router.verb()` methods, where *verb* is one of the HTTP verbes such\nas `router.get()` or `router.post()`.\n\nMatch URL patterns to callback functions or controller actions using `router.verb()`,\nwhere **verb** is one of the HTTP verbs such as `router.get()` or `router.post()`.\n\n```javascript\nrouter\n  .get('/', function *(next) {\n    this.body = 'Hello World!';\n  })\n  .post('/users', function *(next) {\n    // ...\n  })\n  .put('/users/:id', function *(next) {\n    // ...\n  })\n  .del('/users/:id', function *(next) {\n    // ...\n  });\n```\n\nRoute paths will be translated to regular expressions using\n[path-to-regexp](https://github.com/pillarjs/path-to-regexp).\n\nQuery strings will not be considered when matching requests.\n\n#### Named routes\n\nRoutes can optionally have names. This allows generation of URLs and easy\nrenaming of URLs during development.\n\n```javascript\nrouter.get('user', '/users/:id', function *(next) {\n // ...\n});\n\nrouter.url('user', 3);\n// => \"/users/3\"\n```\n\n#### Multiple middleware\n\nMultiple middleware may be given:\n\n```javascript\nrouter.get(\n  '/users/:id',\n  function *(next) {\n    this.user = yield User.findOne(this.params.id);\n    yield next;\n  },\n  function *(next) {\n    console.log(this.user);\n    // => { id: 17, name: \"Alex\" }\n  }\n);\n```\n\n### Nested routers\n\nNesting routers is supported:\n\n```javascript\nvar forums = new Router();\nvar posts = new Router();\n\nposts.get('/', function *(next) {...});\nposts.get('/:pid', function *(next) {...});\nforums.use('/forums/:fid/posts', posts.routes(), posts.allowedMethods());\n\n// responds to \"/forums/123/posts\" and \"/forums/123/posts/123\"\napp.use(forums.routes());\n```\n\n#### Router prefixes\n\nRoute paths can be prefixed at the router level:\n\n```javascript\nvar router = new Router({\n  prefix: '/users'\n});\n\nrouter.get('/', ...); // responds to \"/users\"\nrouter.get('/:id', ...); // responds to \"/users/:id\"\n```\n\n#### URL parameters\n\nNamed route parameters are captured and added to `ctx.params`.\n\n```javascript\nrouter.get('/:category/:title', function *(next) {\n  console.log(this.params);\n  // => { category: 'programming', title: 'how-to-node' }\n});\n```\n\n**Kind**: instance property of <code>[Router](#exp_module_koa-router--Router)</code>\n\n| Param | Type | Description |\n| --- | --- | --- |\n| path | <code>String</code> |  |\n| [middleware] | <code>function</code> | route middleware(s) |\n| callback | <code>function</code> | route callback |\n\n<a name=\"module_koa-router--Router+routes\"></a>\n#### router.routes ⇒ <code>function</code>\nReturns router middleware which dispatches a route matching the request.\n\n**Kind**: instance property of <code>[Router](#exp_module_koa-router--Router)</code>\n<a name=\"module_koa-router--Router+use\"></a>\n#### router.use([path], middleware, [...]) ⇒ <code>Router</code>\nUse given middleware(s) before route callback.\n\nOnly runs if any route is matched. If a path is given, the middleware will\nrun for any routes that include that path.\n\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\n\n| Param | Type |\n| --- | --- |\n| [path] | <code>String</code> |\n| middleware | <code>function</code> |\n| [...] | <code>function</code> |\n\n**Example**\n```javascript\nrouter.use(session(), authorize());\n\n// use middleware only with given path\nrouter.use('/users', userAuth());\n\napp.use(router.routes());\n```\n<a name=\"module_koa-router--Router+prefix\"></a>\n#### router.prefix(prefix) ⇒ <code>Router</code>\nSet the path prefix for a Router instance that was already initialized.\n\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\n\n| Param | Type |\n| --- | --- |\n| prefix | <code>String</code> |\n\n**Example**\n```javascript\nrouter.prefix('/things/:thing_id')\n```\n<a name=\"module_koa-router--Router+allowedMethods\"></a>\n#### router.allowedMethods([options]) ⇒ <code>function</code>\nReturns separate middleware for responding to `OPTIONS` requests with\nan `Allow` header containing the allowed methods, as well as responding\nwith `405 Method Not Allowed` and `501 Not Implemented` as appropriate.\n\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\n\n| Param | Type | Description |\n| --- | --- | --- |\n| [options] | <code>Object</code> |  |\n| [options.throw] | <code>Boolean</code> | throw error instead of setting status and header |\n| [options.notImplemented] | <code>Function</code> | throw the returned value in place of the default NotImplemented error |\n| [options.methodNotAllowed] | <code>Function</code> | throw the returned value in place of the default MethodNotAllowed error |\n\n**Example**\n```javascript\nvar app = koa();\nvar router = router();\n\napp.use(router.routes());\napp.use(router.allowedMethods());\n\n```\n**Example with [Boom](https://github.com/hapijs/boom)**\n```javascript\nvar app = koa();\nvar router = router();\nvar Boom = require('boom');\n\napp.use(router.routes());\napp.use(router.allowedMethods({\n  throw: true,\n  notImplemented: () => new Boom.notImplemented(),\n  methodNotAllowed: () => new Boom.methodNotAllowed()\n}));\n```\n<a name=\"module_koa-router--Router+redirect\"></a>\n#### router.redirect(source, destination, code) ⇒ <code>Router</code>\nRedirect `source` to `destination` URL with optional 30x status `code`.\n\nBoth `source` and `destination` can be route names.\n\n```javascript\nrouter.redirect('/login', 'sign-in');\n```\n\nThis is equivalent to:\n\n```javascript\nrouter.all('/login', function *() {\n  this.redirect('/sign-in');\n  this.status = 301;\n});\n```\n\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\n\n| Param | Type | Description |\n| --- | --- | --- |\n| source | <code>String</code> | URL or route name. |\n| destination | <code>String</code> | URL or route name. |\n| code | <code>Number</code> | HTTP status code (default: 301). |\n\n<a name=\"module_koa-router--Router+route\"></a>\n#### router.route(name) ⇒ <code>Layer</code> &#124; <code>false</code>\nLookup route with given `name`.\n\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\n\n| Param | Type |\n| --- | --- |\n| name | <code>String</code> |\n\n<a name=\"module_koa-router--Router+url\"></a>\n#### router.url(name, params) ⇒ <code>String</code> &#124; <code>Error</code>\nGenerate URL for route. Takes the route name and a map of named `params`.\n\n```javascript\nrouter.get('user', '/users/:id', function *(next) {\n // ...\n});\n\nrouter.url('user', 3);\n// => \"/users/3\"\n\nrouter.url('user', { id: 3 });\n// => \"/users/3\"\n```\n\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\n\n| Param | Type | Description |\n| --- | --- | --- |\n| name | <code>String</code> | route name |\n| params | <code>Object</code> | url parameters |\n\n<a name=\"module_koa-router--Router+param\"></a>\n#### router.param(param, middleware) ⇒ <code>Router</code>\nRun middleware for named route parameters. Useful for auto-loading or\nvalidation.\n\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\n\n| Param | Type |\n| --- | --- |\n| param | <code>String</code> |\n| middleware | <code>function</code> |\n\n**Example**\n```javascript\nrouter\n  .param('user', function *(id, next) {\n    this.user = users[id];\n    if (!this.user) return this.status = 404;\n    yield next;\n  })\n  .get('/users/:user', function *(next) {\n    this.body = this.user;\n  })\n  .get('/users/:user/friends', function *(next) {\n    this.body = yield this.user.getFriends();\n  })\n  // /users/3 => {\"id\": 3, \"name\": \"Alex\"}\n  // /users/3/friends => [{\"id\": 4, \"name\": \"TJ\"}]\n```\n<a name=\"module_koa-router--Router.url\"></a>\n#### Router.url(path, params) ⇒ <code>String</code>\nGenerate URL from url pattern and given `params`.\n\n**Kind**: static method of <code>[Router](#exp_module_koa-router--Router)</code>\n\n| Param | Type | Description |\n| --- | --- | --- |\n| path | <code>String</code> | url pattern |\n| params | <code>Object</code> | url parameters |\n\n**Example**\n```javascript\nvar url = Router.url('/users/:id', {id: 1});\n// => \"/users/1\"\n```\n## Contributing\n\nPlease submit all issues and pull requests to the [alexmingoia/koa-router](http://github.com/alexmingoia/koa-router) repository!\n\n## Tests\n\nRun tests using `npm test`.\n\n## Support\n\nIf you have any problem or suggestion please open an issue [here](https://github.com/alexmingoia/koa-router/issues).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/alexmingoia/koa-router/issues"
  },
  "_id": "koa-router@5.4.0",
  "_from": "koa-router@*"
}
